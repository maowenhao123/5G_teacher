//
//  PrefixHeader.pch
//  5G_teacher
//
//  Created by dahe on 2020/1/8.
//  Copyright © 2020 jiuge. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

#endif /* PrefixHeader_pch */

//----------------------ABOUT SCREEN & SIZE 屏幕&尺寸 ----------------------------
#define MScreenWidth   ([UIScreen mainScreen].bounds.size.width)
#define MScreenHeight  ([UIScreen mainScreen].bounds.size.height)
#define MScaleMScreenWidth(width)  MScreenWidth / 375 * width

/** 设备是否为iPhone 4/4S 分辨率320x480，像素640x960，@2x */
#define iPhone4 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 960), [[UIScreen mainScreen] currentMode].size) : NO)

/** 设备是否为iPhone 5C/5/5S 分辨率320x568，像素640x1136，@2x */
#define iPhone5 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) : NO)

/** 设备是否为iPhone 6 分辨率375x667，像素750x1334，@2x */
//iPhone 6 iPhone 7 iPhone 8
#define iPhone6 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(750, 1334), [[UIScreen mainScreen] currentMode].size) : NO)

/** 设备是否为iPhone 6 Plus 分辨率414x736，像素1242x2208，@3x */
//iPhone 6P iPhone 7P iPhone 8P
#define iPhone6P ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2208), [[UIScreen mainScreen] currentMode].size) : NO)

/** 设备是否为iPhone X 分辨率375x812，像素1125x2436，@3x */
//iPhone XS
#define iPhoneX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)

/** 设备是否为iPhone XR 分辨率414x896，像素828x1792，@3x */
#define iPhoneXR ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size) : NO)

/** 设备是否为iPhone XS MAX 分辨率414x896，像素1242x2688，@3x */
#define iPhoneXSMax ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size) : NO)

//刘海屏手机
#define IsBangIPhone (iPhoneX || iPhoneXR || iPhoneXSMax)

//statuBar的高度
#define MStatusBarH (IsBangIPhone ? 44 : 20)

//navigationBar的高度
#define MNavBarH 44

//tabBar的高度
#define MTabBarH (IsBangIPhone ? 83 : 49)

//底部安全区域
#define MSafeBottomMargin  (IsBangIPhone ? 34 : 0)

//----------------------ABOUT COLOR 颜色相关 ----------------------------
#define MColor(r, g, b, a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:(a)]
// rgb颜色转换（16进制->10进制）
#define UIColorFromRGB(rgbValue) [UIColor colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 green:((float)((rgbValue & 0xFF00) >> 8))/255.0 blue:((float)(rgbValue & 0xFF))/255.0 alpha:1.0]
//常用黑色字体颜色
#define MBlackTextColor MColor(43, 43, 43, 1)
//常用灰色字体颜色
#define MGrayTextColor MColor(148, 148, 148, 1)
//常用红色色字体颜色
#define MRedTextColor MColor(251, 64, 27, 1)
//点赞红色色字体颜色
#define MMPraiseRedTextColor MColor(255, 74, 74, 1)
//常用背景颜色
#define MBackgroundColor UIColorFromRGB(0xf2f2f2)
//常用灰色背景时线的颜色
#define MGrayLineColor MColor(213, 213, 213, 1)
//常用白色色时背景线的颜色
#define MWhiteLineColor MColor(238, 238, 238, 1)
//主色
#define MDefaultColor MColor(237, 111, 45, 1)

//字符串是否为空
#define MStringIsEmpty(str) ([str isKindOfClass:[NSNull class]] || str == nil || [str length] == 0) || [str isEqualToString:@"(null)"]
//数组是否为空
#define MArrayIsEmpty(array) (array == nil || [array isKindOfClass:[NSNull class]] || array.count == 0)
//字典是否为空
#define MDictIsEmpty(dic) (dic == nil || [dic isKindOfClass:[NSNull class]] || dic.allKeys == 0)
/** 是否是空对象*/
#define MObjectIsEmpty(_object) (_object == nil || [_object isKindOfClass:[NSNull class]] || ([_object respondsToSelector:@selector(length)] && [(NSData *)_object length] == 0) || ([_object respondsToSelector:@selector(count)] && [(NSArray *)_object count] == 0))

#define KEY_WINDOW [UIApplication sharedApplication].windows.firstObject
#define MMargin 15
#define MCellH 50

//判断是否请求成功
#define SUCCESS [json[@"code"] isEqualToNumber:@(200)] && json
//请求失败
#define ShowErrorView [MBProgressHUD showError:json[@"msg"]];
//userId
#define UserId [[NSUserDefaults standardUserDefaults] stringForKey:@"userId"]
//token
#define Token [[NSUserDefaults standardUserDefaults] stringForKey:@"token"]

#define MBarItemAttDic @{NSForegroundColorAttributeName: MDefaultColor}

#define waitingView [MBProgressHUD showMessage:@"加载中..." toView:self.view];

#define MPageSize @(10)

//自定义Log
#ifdef DEBUG
#define MLog(fmt, ...) NSLog((@"%s [Line %d] " fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__);
#else
#define MLog(...)
#endif

//---------------------- 头文件 ----------------------------
#import "UIView+Category.h"
#import "NSString+Category.h"
#import "MHttpTool.h"
#import "MBProgressHUD+MJ.h"
#import "UIImageView+WebCache.h"
#import "Tool.h"

typedef enum : NSUInteger {
    VideoCourse = 0,
    PublicCourse = 1,
    OnetooneCourse = 2,
} CourseType;
